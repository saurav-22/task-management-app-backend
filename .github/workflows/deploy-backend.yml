name: Deploy Backend to ECR and ArgoCD
on:
  push:
    branches:
      - main
jobs:
  deploy-backend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-south-1

      - name: Login to ECR
        run: |
          aws ecr get-login-password --region ap-south-1 | \
          docker login --username AWS --password-stdin 051101197314.dkr.ecr.ap-south-1.amazonaws.com

      - name: Build, Scan, and Push Services
        run: |
          declare -A repos
          repos=(
            ["user-service"]="051101197314.dkr.ecr.ap-south-1.amazonaws.com/user-service"
            ["board-service"]="051101197314.dkr.ecr.ap-south-1.amazonaws.com/board-service"
            ["task-service"]="051101197314.dkr.ecr.ap-south-1.amazonaws.com/task-service"
            ["comment-service"]="051101197314.dkr.ecr.ap-south-1.amazonaws.com/comment-service"
          )
          services=("user-service" "board-service" "task-service" "comment-service")
          for service in "${services[@]}"; do
            cd $service
            docker build -t $service .
            docker tag $service:latest ${repos[$service]}:${{ github.sha }}
            docker push ${repos[$service]}:${{ github.sha }}
            cd ..
          done

      - name: Trigger ArgoCD Sync
        run: |
          curl -X POST -H "Authorization: Bearer ${{ secrets.ARGOCD_TOKEN }}" \
          https://argocd-server/api/v1/applications/task-app/sync
